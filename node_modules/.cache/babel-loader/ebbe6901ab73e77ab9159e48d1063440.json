{"ast":null,"code":"var _jsxFileName = \"C:\\\\shoolini\\\\shooliniuniversity\\\\src\\\\components\\\\Dialogs\\\\SchoolProgramDetail.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SchoolProgramDetail() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMaxWidthChange = event => {\n    setMaxWidth( // @ts-expect-error autofill of arbitrary value is not handled.\n    event.target.value);\n  };\n\n  const handleFullWidthChange = event => {\n    setFullWidth(event.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"See ALl Programs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Optional sizes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"You can set my maximum width and whether to adapt or not.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          noValidate: true,\n          component: \"form\",\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            m: 'auto',\n            width: 'fit-content'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              mt: 2,\n              minWidth: 120\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"max-width\",\n              children: \"maxWidth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              autoFocus: true,\n              value: maxWidth,\n              onChange: handleMaxWidthChange,\n              label: \"maxWidth\",\n              inputProps: {\n                name: 'max-width',\n                id: 'max-width'\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: false,\n                children: \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"xs\",\n                children: \"xs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"sm\",\n                children: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"md\",\n                children: \"md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"lg\",\n                children: \"lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"xl\",\n                children: \"xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            sx: {\n              mt: 1\n            },\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: fullWidth,\n              onChange: handleFullWidthChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this),\n            label: \"Full width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SchoolProgramDetail, \"p/Oqzeo82DLdYzlT3F5TnsySOcw=\");\n\n_c = SchoolProgramDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"SchoolProgramDetail\");","map":{"version":3,"sources":["C:/shoolini/shooliniuniversity/src/components/Dialogs/SchoolProgramDetail.js"],"names":["React","Box","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","SchoolProgramDetail","open","setOpen","useState","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","display","flexDirection","m","width","mt","minWidth","name","id"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport Switch from '@mui/material/Switch';\r\n\r\nexport default function SchoolProgramDetail() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMaxWidthChange = (event) => {\r\n    setMaxWidth(\r\n      // @ts-expect-error autofill of arbitrary value is not handled.\r\n      event.target.value,\r\n    );\r\n  };\r\n\r\n  const handleFullWidthChange = (event) => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n      See ALl Programs\r\n      </Button>\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n          <Box\r\n            noValidate\r\n            component=\"form\"\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              m: 'auto',\r\n              width: 'fit-content',\r\n            }}\r\n          >\r\n            <FormControl sx={{ mt: 2, minWidth: 120 }}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                label=\"maxWidth\"\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              sx={{ mt: 1 }}\r\n              control={\r\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} />\r\n              }\r\n              label=\"Full width\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}